#!/bin/sh
#
#
#
#   Startup/shutdown script for running islandora microservices.
#
#   Linux chkconfig stuff:
#
#   chkconfig: 2345 70 10
#   description: Startup/shutdown script for running Islandora Microservices.
#
# Source function library.
. /etc/environment


PROG="Islandora Microservices"
PYTHON=/usr/bin/python
MICROSERVICES_PATH=/mnt/fjm_obj/lib/fedora_microservices
CONFIG_FILE=$MICROSERVICES_PATH/islandora_microservices.cfg
LOCK_FILE=/var/lock/islandora_microservices
# *** Please make sure you change the fedora user to reflect the local setup. ***t
FEDORA_USER=root

start () {
	echo -n "Starting $PROG: "
	# check to see if the process is already running
	if [ -f $LOCK_FILE ]; then
		echo "$PROG is already running"
	else
			# start JMS as the fedora user
      sudo -Eu $FEDORA_USER /usr/bin/env PYTHONPATH=$PYTHONPATH $PYTHON $MICROSERVICES_PATH/islandora_listener.py -C $CONFIG_FILE & #> /dev/null #2>&1
			sleep 3
			ps -ef | grep 'islandora_listener' | grep -v 'grep' >/dev/null 2>&1
			RETVAL=$?
			if [ $RETVAL = 0 ]; then
				touch $LOCK_FILE
				echo "                                          [ \033[0;32m OK\033[0;39m""  ]"
			else
				echo "                                          [ \033[0;31m FAILED\033[0;39m""  ]"
			fi
		fi
}

stop () {
	# stop daemon
	echo -n "Stopping $PROG: "
	# check to see if the process is running
	if [ ! -f $LOCK_FILE ]; then
		echo "$PROG is not running"
	else
		# use kill -2 to stop JMS.
		sudo -u $FEDORA_USER kill `ps -ef | grep islandora_listener | grep -v grep | awk '{print $2}'` &>/dev/null
		RETVAL=$?
		echo "                                          [ \033[0;32m OK\033[0;39m""  ]"
		[ $RETVAL = 0 ] && rm -f $LOCK_FILE
	fi
}

restart() {
	stop
	start
}

case $1 in
	start)
		start
	;;
	stop)
		stop
	;;
	restart)
		restart
	;;
	status)
		if [ -f $LOCK_FILE ]; then
			echo "$PROG (pid `ps -ef | grep 'fedora_listener' | grep -v 'grep' | awk '{print $2}'`) is running..."
		else
			echo "$PROG has not been started."
		fi
	;;
	*)

	echo $"Usage: $PROG {start|stop|restart|status}"
	exit 3
esac

exit $RETVAL
